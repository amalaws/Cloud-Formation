Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String


  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24

  EC2InstanceType: 
     Type: String
     Description: Select Instance Type
     Default: t2.micro
     AllowedValues: [t2.micro,t3.micro,t2.small]
   
  myAMIid:
     Type: String
     Description: ami id
     Default: ami-0453ec754f44f9a4a


Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
       CidrBlock: !Ref VpcCIDR
       EnableDnsSupport: true
       EnableDnsHostnames: true
       Tags:
        - Key: Name
          Value: !Ref EnvironmentName
       

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
       InternetGatewayId: !Ref InternetGateway
       VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
       VpcId: !Ref VPC
       AvailabilityZone: !Select [ 0, !GetAZs '' ]
       CidrBlock: !Ref PublicSubnet1CIDR
       MapPublicIpOnLaunch: true
       Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
       VpcId: !Ref VPC
       AvailabilityZone: !Select [ 0, !GetAZs  '' ]
       CidrBlock: !Ref PrivateSubnet1CIDR
       MapPublicIpOnLaunch: false
       Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
       VpcId: !Ref VPC
       Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
       RouteTableId: !Ref PublicRouteTable
       SubnetId: !Ref PublicSubnet1

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
       VpcId: !Ref VPC
       Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)
 

  myInstance:
     Type: 'AWS::EC2::Instance'
     Properties: 
        ImageId: !Ref myAMIid 
        InstanceType: t2.micro
        VpcId: !Ref VPC  
        KeyName: nov11
        SecurityGroupIds:
          - sg-0eb9885f3e48f79f4
        UserData:
          Fn::Base64: !Sub |
             #!/bin/bash
             yum update -y
             service httpd start
             chkconfig httpd on
       